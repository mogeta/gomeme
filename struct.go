package gomeme

import "time"

type AutoGenerated struct {
	Events []struct {
		ID       time.Time `json:"id"`
		Type     string    `json:"type"`
		JSONData struct {
			Focus   int     `json:"focus"`
			Calm    int     `json:"calm"`
			Zone    int     `json:"zone"`
			BkiN    int     `json:"bki_n"`
			BkiSum  float64 `json:"bki_sum"`
			ScLbs   float64 `json:"sc_lbs"`
			Posture int     `json:"posture"`
		} `json:"json_data"`
		DataFileURL interface{} `json:"data_file_url"`
		CreatedAt   time.Time   `json:"created_at"`
		UpdatedAt   time.Time   `json:"updated_at"`
	} `json:"events"`
	Cursor string `json:"cursor"`
}

type Measure struct {
	ComputedData map[string][]ComputedDatum `json:"computed_data"`
	Cursor       string                     `json:"cursor"`
}

type ComputedDatum struct {
	Date    string  `json:"date"`
	Zone    int64   `json:"zone"`
	Focus   int64   `json:"focus"`
	Calm    int64   `json:"calm"`
	Posture int64   `json:"posture"`
	BkiSum  float64 `json:"bki_sum"`
	BkiN    int64   `json:"bki_n"`
}

//summary data
type Summaries map[string]Summary

//summary data detail
type Summary struct {
	ZoneSEC  int64 `json:"zone_sec"`
	FlowSEC  int64 `json:"flow_sec"`
	TotalSEC int64 `json:"total_sec"`
}
